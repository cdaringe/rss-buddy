{"version":3,"sources":["App.tsx","util.ts","feed.ts","index.tsx"],"names":["convert","require","App","React","useState","feed","setFeed","useEffect","query","queryString","pairs","substr","split","i","length","pair","decodeURIComponent","parseQuery","window","location","search","items","JSON","parse","fetch","mode","then","res","text","str","xml2js","compact","parsed","catch","err","Error","stringify","message","onClick","Array","isArray","rss","channel","item","map","post","title","_text","replace","img","_attributes","url","date","pubDate","toCompactFeed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAGA,IAAIA,EAAUC,EAAQ,IAgEPC,MAzDf,WAAgB,IAAD,EACWC,IAAMC,SAAc,IAD/B,mBACNC,EADM,KACAC,EADA,KAab,GAXAH,IAAMI,WAAU,WACd,IAAMC,ECbH,SAAoBC,GAMzB,IALA,IAAID,EAAgC,GAChCE,GAA4B,MAAnBD,EAAY,GACrBA,EAAYE,OAAO,GACnBF,GACFG,MAAM,KACCC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAAK,CACrC,IAAIE,EAAOL,EAAMG,GAAGD,MAAM,KAC1BJ,EAAMQ,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,IAAM,IAErE,OAAOP,EDGSS,CAAWC,OAAOC,SAASC,QACzC,GAAIZ,EAAMa,MACR,OAAOf,EAAQgB,KAAKC,MAAMf,EAAMa,QAElCG,MATE,gFASc,CAAEC,KAAM,SACrBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAS7B,EAAQ8B,OAAOD,EAAK,CAAEE,SAAS,OAC7CL,MAAK,SAACM,GAAD,OAAY1B,EAAQ0B,MACzBC,OAAM,SAACC,GAAD,OAAS5B,EAAQ4B,QACzB,KACE7B,EAAM,OAAO,wCAClB,GAAIA,aAAgB8B,QAAmB,IAAV9B,EAC3B,OACE,6BACE,4DACA,6BAAMiB,KAAKc,UAAL,OAAe/B,QAAf,IAAeA,OAAf,EAAeA,EAAMgC,QAAS,KAAM,IAC1C,4BAAQC,QAAS,WACfpB,OAAOC,SAASC,OAAhB,iBA1BK,w0CAyBP,mBAON,IAAMC,EAAQkB,MAAMC,QAAQnC,GAAQA,EEqE8B,SAACA,GAAD,OAClEA,EAAKoC,IAAIC,QAAQC,KAAKC,KAAI,SAACC,GAAD,cAAW,CACnCC,MAAOD,EAAKC,MAAMC,MAAMC,QAAQ,YAAa,IAC7CC,KAAK,UAAAJ,EAAK,wBAAL,mBAAuBK,mBAAvB,eAAoCC,MAAO,GAChDC,KAAMP,EAAKQ,QAAQN,UFzEsBO,CAAcjD,GACxDa,OAAeb,KAAOgB,G,MGhCzBkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7faf4279.chunk.js","sourcesContent":["import React from \"react\";\nimport { toCompactFeed, RootFeed } from \"./feed\";\nimport { parseQuery } from \"./util\";\nvar convert = require(\"xml-js\");\nconst fakeFeed=\"%5B%7B%22title%22%3A%22Study%20Finds%20More%20Americans%20Waiting%20To%20Start%20Secret%20Second%20Families%20Until%20Later%20In%20Life%20%22%2C%22img%22%3A%22https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FEYK2LngXQAY_p3T.jpg%22%2C%22date%22%3A%22Sat%2C%2016%20May%202020%2021%3A31%3A01%20%2B0000%22%7D%2C%7B%22title%22%3A%22Teleconferencing%20Pastor%20Requests%20Any%20Worshipper%20Currently%20Speaking%20In%20Tongues%20Go%20On%20Mute%20%22%2C%22img%22%3A%22https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FEYKgqp8X0AAN_zw.jpg%22%2C%22date%22%3A%22Sat%2C%2016%20May%202020%2019%3A57%3A01%20%2B0000%22%7D%2C%7B%22title%22%3A%22Mom%20Apologizing%20For%20Going%20Through%20Menopause%20%22%2C%22img%22%3A%22https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FEYKNq1zWoAISaC8.jpg%22%2C%22date%22%3A%22Sat%2C%2016%20May%202020%2018%3A34%3A01%20%2B0000%22%7D%2C%7B%22title%22%3A%22Trump%20Accuses%20New%20York%20Of%20Padding%20State's%20Mortality%20Rate%20By%20Including%20African%20American%20Deaths%20%22%2C%22img%22%3A%22https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FEYJ3d9yWoAARQ9E.jpg%22%2C%22date%22%3A%22Sat%2C%2016%20May%202020%2016%3A57%3A01%20%2B0000%22%7D%2C%7B%22title%22%3A%22Area%20Man's%20Knee%20Making%20Weird%20Sound%20%22%2C%22img%22%3A%22https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FEYJiLniXQAg9UqB.jpg%22%2C%22date%22%3A%22Sat%2C%2016%20May%202020%2015%3A24%3A01%20%2B0000%22%7D%5D\"\nconst FEED_URL =\n  process.env.NODE_ENV === \"development\"\n    ? \"/rss/5ec0621c8a93f8a57f8b45675ec061c38a93f8d67b8b4567.xml\"\n    : \"https://fetchrss.com/rss/5ec0621c8a93f8a57f8b45675ec061c38a93f8d67b8b4567.xml\";\n\nfunction App() {\n  const [feed, setFeed] = React.useState<any>(\"\");\n  React.useEffect(() => {\n    const query = parseQuery(window.location.search);\n    if (query.items) {\n      return setFeed(JSON.parse(query.items));\n    }\n    fetch(FEED_URL, { mode: \"cors\" })\n      .then((res) => res.text())\n      .then((str) => convert.xml2js(str, { compact: true }))\n      .then((parsed) => setFeed(parsed))\n      .catch((err) => setFeed(err));\n  }, []);\n  if (!feed) return <div>Loading</div>;\n  if (feed instanceof Error || feed === -1)\n    return (\n      <div>\n        <h1>Blast! There was an error :/</h1>\n        <pre>{JSON.stringify(feed?.message, null, 2)}</pre>\n        <button onClick={() => {\n          window.location.search=`?items=${fakeFeed}`\n        }}>\n          Try mock data?\n        </button>\n      </div>\n    );\n  const items = Array.isArray(feed) ? feed : toCompactFeed(feed as RootFeed);\n  (window as any).feed = items;\n  return (\n    // <section className=\"mw7 center\">\n    <section className=''>\n      <h2 className=\"athelas f6 ph1 ph0-l mv0\">The Onion Twitter</h2>\n      {items.map((post, i) => {\n        return (\n          <article key={i} className=\"pv2 bt bb b--black-10 ph3 ph0-l\">\n            <div className=\"flex flex-column flex-row-ns\">\n              <div className=\"w-100 w-60-ns pr3-ns order-2 order-1-ns\">\n                <h1 className=\"f3 athelas mt0 lh-title\">{post.title}</h1>\n                {/* <p className=\"f5 f4-l lh-copy athelas\">\n                  The tech giant says it is ready to begin planning a quantum\n                  computer, a powerful cpu machine that relies on subatomic particles instead\n                  of transistors.\n                </p> */}\n              </div>\n              <div className=\"pl3-ns order-1 order-2-ns mb4 mb0-ns w-100 w-40-ns\">\n                <img src={post.img} className=\"db\" alt=\"article-img\" />\n              </div>\n            </div>\n            {/* <p className=\"f6 lh-copy gray mv0\">By <span className=\"ttu\">{post['dc:creator']._text}</span></p> */}\n            <time className=\"f6 db gray\">{post.date}</time>\n          </article>\n        );\n      })}\n    </section>\n  );\n}\n\nexport default App;\n","export function parseQuery(queryString: string): Record<string, string> {\n  var query: Record<string, string> = {};\n  var pairs = (queryString[0] === \"?\"\n    ? queryString.substr(1)\n    : queryString\n  ).split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || \"\");\n  }\n  return query;\n}\n","export interface Attributes {\n  url?: string;\n  medium?: string;\n  width?: string;\n  height?: string;\n  version: string;\n  encoding?: string;\n  \"xmlns:media\"?: string;\n  \"xmlns:atom\"?: string;\n  \"xmlns:dc\"?: string;\n  href?: string;\n  rel?: string;\n  type?: string;\n}\n\nexport interface Declaration {\n  _attributes: Attributes;\n}\n\nexport interface Title {\n  _text: string;\n}\n\nexport interface Description {\n  _text: string;\n}\n\nexport interface PubDate {\n  _text: string;\n}\n\nexport interface Generator {\n  _text: string;\n}\n\nexport interface Link {\n  _text: string;\n}\n\nexport interface AtomLink {\n  _attributes: Attributes;\n}\n\nexport interface Url {\n  _text: string;\n}\n\nexport interface Image {\n  link: Link;\n  url: Url;\n  title: Title;\n}\n\nexport interface Title3 {\n  _text: string;\n}\n\nexport interface DcCreator {\n  _text: string;\n}\n\nexport interface MediaContent {\n  _attributes: Attributes;\n}\n\nexport interface Guid {\n  _text: string;\n}\n\nexport interface Item {\n  title: Title;\n  link: Link;\n  description: Description;\n  \"dc:creator\": DcCreator;\n  pubDate: PubDate;\n  \"media:content\": MediaContent;\n  guid: Guid;\n}\n\nexport interface Channel {\n  title: Title;\n  description: Description;\n  pubDate: PubDate;\n  generator: Generator;\n  link: Link;\n  \"atom:link\": AtomLink;\n  image: Image;\n  item: Item[];\n}\n\nexport interface Rss {\n  _attributes: Attributes;\n  channel: Channel;\n}\n\nexport interface RootFeed {\n  _declaration: Declaration;\n  rss: Rss;\n}\n\nexport type CompactFeedItem = {\n  title: string;\n  date: string;\n  img: string;\n};\nexport const toCompactFeed: (feed: RootFeed) => CompactFeedItem[] = (feed) =>\n  feed.rss.channel.item.map((post) => ({\n    title: post.title._text.replace(/(http.*)/g, \"\"),\n    img: post[\"media:content\"]?._attributes?.url || \"\",\n    date: post.pubDate._text,\n  }));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./tachyons.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}