{"version":3,"sources":["App.tsx","index.tsx"],"names":["convert","require","App","React","useState","feed","setFeed","useEffect","fetch","mode","then","res","text","str","xml2js","compact","parsed","catch","err","Error","JSON","stringify","message","feedContents","rss","channel","className","item","map","post","title","_text","replace","src","_attributes","url","alt","pubDate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAEIA,EAAUC,EAAQ,IAsDPC,MA/Cf,WAAgB,IAAD,EACWC,IAAMC,SAAc,IAD/B,mBACNC,EADM,KACAC,EADA,KASb,GAPAH,IAAMI,WAAU,WACdC,MALE,+EAKc,CAAEC,KAAM,SACrBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAASb,EAAQc,OAAOD,EAAK,CAAEE,SAAS,OAC7CL,MAAK,SAACM,GAAD,OAAYV,EAAQU,MACzBC,OAAM,SAACC,GAAD,OAASZ,EAAQY,QACzB,KACEb,EAAM,OAAO,wCAClB,GAAIA,aAAgBc,MAClB,OAAO,6BAAMC,KAAKC,UAAL,OAAehB,QAAf,IAAeA,OAAf,EAAeA,EAAMiB,QAAS,KAAM,IACnD,IAAMC,EAAgBlB,EAAkBmB,IAAIC,QAC5C,OACE,6BAASC,UAAU,cACjB,wBAAIA,UAAU,qBAAd,qBACCH,EAAaI,KAAKC,KAAI,SAACC,GAAU,IAAD,IAC/B,OACE,6BAASH,UAAU,mCACjB,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,2BACXG,EAAKC,MAAMC,MAAMC,QAAQ,YAAa,MAQ3C,yBAAKN,UAAU,sDACb,yBACEO,IAAG,UAAEJ,EAAK,wBAAP,iBAAE,EAAuBK,mBAAzB,aAAE,EAAoCC,IACzCT,UAAU,KACVU,IAAI,kBAKV,0BAAMV,UAAU,cAAcG,EAAKQ,QAAQN,a,MC3CvDO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.269ccb54.chunk.js","sourcesContent":["import React from \"react\";\nimport { RootFeed } from \"./feed\";\nvar convert = require(\"xml-js\");\n\nconst FEED_URL =\n  process.env.NODE_ENV === \"development\"\n    ? \"/rss/5ec0621c8a93f8a57f8b45675ec061c38a93f8d67b8b4567.xml\"\n    : \"http://fetchrss.com/rss/5ec0621c8a93f8a57f8b45675ec061c38a93f8d67b8b4567.xml\";\n\nfunction App() {\n  const [feed, setFeed] = React.useState<any>(\"\");\n  React.useEffect(() => {\n    fetch(FEED_URL, { mode: \"cors\" })\n      .then((res) => res.text())\n      .then((str) => convert.xml2js(str, { compact: true }))\n      .then((parsed) => setFeed(parsed))\n      .catch((err) => setFeed(err));\n  }, []);\n  if (!feed) return <div>Loading</div>;\n  if (feed instanceof Error)\n    return <pre>{JSON.stringify(feed?.message, null, 2)}</pre>;\n  const feedContents = (feed as RootFeed).rss.channel;\n  return (\n    <section className=\"mw7 center\">\n      <h2 className=\"athelas ph3 ph0-l\">The Onion Twitter</h2>\n      {feedContents.item.map((post) => {\n        return (\n          <article className=\"pv4 bt bb b--black-10 ph3 ph0-l\">\n            <div className=\"flex flex-column flex-row-ns\">\n              <div className=\"w-100 w-60-ns pr3-ns order-2 order-1-ns\">\n                <h1 className=\"f3 athelas mt0 lh-title\">\n                  {post.title._text.replace(/(http.*)/g, \"\")}\n                </h1>\n                {/* <p className=\"f5 f4-l lh-copy athelas\">\n                  The tech giant says it is ready to begin planning a quantum\n                  computer, a powerful cpu machine that relies on subatomic particles instead\n                  of transistors.\n                </p> */}\n              </div>\n              <div className=\"pl3-ns order-1 order-2-ns mb4 mb0-ns w-100 w-40-ns\">\n                <img\n                  src={post[\"media:content\"]?._attributes?.url}\n                  className=\"db\"\n                  alt=\"article-img\"\n                />\n              </div>\n            </div>\n            {/* <p className=\"f6 lh-copy gray mv0\">By <span className=\"ttu\">{post['dc:creator']._text}</span></p> */}\n            <time className=\"f6 db gray\">{post.pubDate._text}</time>\n          </article>\n        );\n      })}\n    </section>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./tachyons.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}